version: '3.8'

services:
  # Base de datos PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: opticash_postgres
    environment:
      POSTGRES_DB: opticash
      POSTGRES_USER: opticash_user
      POSTGRES_PASSWORD: opticash_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - opticash_network

  # Redis para cach√©
  redis:
    image: redis:7-alpine
    container_name: opticash_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - opticash_network

  # Backend FastAPI
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: opticash_backend
    environment:
      - DATABASE_URL=postgresql://opticash_user:opticash_password@postgres:5432/opticash
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-super-secret-jwt-key
      - ENVIRONMENT=development
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend:/app
    networks:
      - opticash_network

  # Frontend React
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: opticash_frontend
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_ENVIRONMENT=development
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - opticash_network

  # Nginx (Proxy Reverso)
  nginx:
    image: nginx:alpine
    container_name: opticash_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - opticash_network

volumes:
  postgres_data:
  redis_data:

networks:
  opticash_network:
    driver: bridge
